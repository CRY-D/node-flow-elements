:host {
  box-sizing: border-box;
  display: block;
  min-width: 10rem;
}

.wrapper {
  display: block;
}

.coords {
  position: absolute;
  top: -1rem;
  display: flex;
  gap: var(--sl-spacing-small);
  pointer-events: none;
  opacity: 0;
  transition: opacity var(--sl-transition-fast);

  &.is-visible {
    opacity: 1;
  }

  & .tag-x::part(base) {
    color: var(--sl-color-red-600);
  }

  & .tag-y::part(base) {
    color: var(--sl-color-green-600);
  }
}

.input .action {
  margin-right: var(--sl-spacing-x-small);
  margin-left: var(--sl-spacing-small);
}

.output .action {
  margin-right: var(--sl-spacing-small);
  margin-left: var(--sl-spacing-x-small);
}

.wrapper.is-connecting-port {
  &,
  & * {
    cursor: crosshair !important;

    & [slot='header'] {
      // pointer-events: none;
    }
  }

  & .action {
    pointer-events: none;
  }
}

.handle {
  display: flex;
  align-items: center;
}

.port-wrapper {
  display: flex;
  flex-direction: column;
  gap: var(--sl-spacing-small);

  & header {
    padding-top: var(--sl-spacing-small);
  }
}

sl-card.is-deleting {
  opacity: 0;
  transition:
    opacity 0.15s,
    transform 0.3s;
  transform: scale(0.5);
}

sl-card.wrapper.is-selected::part(base) {
  outline: 1px solid var(--sl-color-neutral-500);
}

sl-card.wrapper::part(base) {
  outline: 1px solid transparent;
  box-shadow: var(--sl-shadow-small), var(--sl-shadow-x-large);
  transition: outline 0.25s;
  transition-delay: 0s;
}

// :not(.is-connecting-port)
sl-card.wrapper.is-hovering::part(base) {
  outline: 1px solid var(--sl-color-neutral-700);
  transition-delay: 0.15s;
}

sl-card::part(header) {
  padding: var(--sl-spacing-2x-small) var(--sl-spacing-medium);
  padding-right: var(--sl-spacing-2x-small);
}

sl-card::part(body) {
  padding: 0;
}

sl-card::part(footer) {
  padding: var(--sl-spacing-small) 0 var(--sl-spacing-small) 0;
}

sl-card.wrapper.is-dragging::part(base) {
  outline: 2px solid var(--sl-color-primary-500);
  transition: outline 0.025s;
  transition-delay: 0s;
}

jsf-shoelace::part(object) {
  padding: var(--sl-spacing-x-small);
  padding-top: var(--sl-spacing-2x-small);
}

[slot='header'] {
  & [slot='trigger'] {
    transition: opacity 0.125s;
    transition-delay: 0.15s;
  }
}

[slot='footer'] {
  display: flex;
  align-items: flex-start;

  &:not(:has(.output)) {
    justify-content: flex-start;
  }

  &:not(:has(.input)) {
    justify-content: flex-end;
  }

  &:has(.input):has(.output) {
    justify-content: space-between;
  }
}

.input.port-wrapper {
  margin-left: -1.5rem;
}

.output.port-wrapper {
  margin-right: -1.5rem;
}

.node-settings {
  display: flex;
  align-items: center;

  & sl-divider {
    height: 1.5rem;
    padding: 0 var(--sl-spacing-x-small);
  }

  padding: var(--sl-spacing-small) var(--sl-spacing-x-small);
}

.port-editor {
  & sl-menu {
    padding: 0;
  }

  & sl-button[disabled]::part(base) {
    background: transparent;
    opacity: 1;
  }
}

.header {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  justify-content: space-between;

  & .body {
    display: flex;
    align-items: center;
  }

  nf-handle {
    display: block;
    width: 100%;
  }

  & .title {
    display: flex;
    gap: var(--sl-spacing-small);
    align-items: center;
    padding: var(--sl-spacing-small);
  }
}

.disconnect-all {
  &::part(base) {
    color: var(--sl-color-red-800);
  }
}

.pulse {
  &::part(base) {
    color: var(--sl-color-green-800);
  }
}

.delete-node {
  &::part(label) {
    color: var(--sl-color-red-600);
  }
}
